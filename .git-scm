#!/usr/bin/env bash

set +e # Turn off the exit-on-error option

git_pristine () { # Reset to fresh checkout but stash all non-tracked files
    git stash --include-untracked --all
    git reset --hard
    git clean -dfx
}

git_default_branch () {
  # Returns branch checked out when originally cloned ( https://joshtronic.com/2020/08/09/how-to-get-the-default-git-branch )
  (git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@') 2>/dev/null
}

git_merge_default () { # (g)it (m)erge (d)e(f)ault - merges from the branch which was checked out on clone
  local default=$(git_default_branch)
  echo "Merging from default branch '$default'"
  git pull origin $default:$default
  git pull
  git merge $default --no-edit
}

git_remove_submodule () {
  if [ -z "$1" ]; then
    echo "Please provide the name of the submodule, e.g. remove_submodule common"
    exit 1;
  else
    git submodule deinit $1
    git rm $1
    git commit -m "Removed submodule: $1"
    rm -rf .git/modules/$1
  fi
}

get_ticket_from_branch () { # Jira ticket format
  # Returns "PROJ-123" in branch "anything/PROJ-123-some-feature"
  # Returns "PROJ-123" in branch "proj-123-some-feature"
  TICKET=$(git rev-parse --abbrev-ref HEAD | grep -Eo '^(\w+/)?(\w+[-_])?[0-9]+' | grep -Eo '(\w+[-])?[0-9]+' | tr "[:lower:]" "[:upper:]")
  echo "$TICKET"
}

git_commit_ticket () {
  local branch_ticket_id=$(get_ticket_from_branch)
  local commit_message=${1}

  if [ -z "$commit_message" ]; then
    echo 'Commit message missing. Try the following format:'
    echo 'gct "My commit message"'
    return
  else
    echo "Commit message: '$commit_message'"
    if [ -z "$branch_ticket_id" ]; then
      read "REPLY?No ticket id found in branch. Do you want to continue? (y/n): "
      if [[ $REPLY != [Yy]* ]]; then
        echo "Exiting the script."
        exit 0
      fi
    else
      echo "Ticket id: $branch_ticket_id"
      commit_message="[$branch_ticket_id] $commit_message"
    fi
    echo "Full commit message: '$commit_message'"
    git commit -m $commit_message
  fi
}

alias gcdf='git checkout $(git_default_branch) && git pull &'               # (g)it (c)heckout (d)e(f)ault
alias gmdf='git_merge_default'                                              # (g)it (m)erge (d)e(f)ault
alias gfdf='git fetch origin $(git_default_branch):$(git_default_branch)'   # (g)it (f)etch (d)e(f)ault
alias grdf='git rebase $(git_default_branch)'                               # (g)it (r)ebase (d)e(f)ault
alias gct='git_commit_ticket'                                               # (g)it (c)ommit (t)icket
alias gstu='git stash save --include-untracked'                             # (g)it (st)ash save (u)ntracked - overrides OhMyZsh git plugin which pushes, not saves
